# =============================================================================
# Radar Agent Configuration File
# =============================================================================
# Complete documentation: https://redis-field-engineering.github.io/radar/

# -----------------------------------------------------------------------------
# Agent Section - Global agent configuration
# -----------------------------------------------------------------------------
agent:
  # Unique identifier for this agent instance (required)
  id: "radar-agent-001"

  # Collection interval with time unit (s, m, h)
  # How frequently the agent will collect metrics from Redis instances
  # Default: 60s
  collection_interval: "60s"

  # Output directory for offline collections
  # Default: current directory
  output_directory: "./output"

  # Data redaction level: none, credentials, all
  # - none: No redaction (not recommended for production)
  # - credentials: Redact passwords and sensitive fields
  # - all: Maximum redaction for compliance
  # Default: all
  redaction_level: "all"

# -----------------------------------------------------------------------------
# Server Section - gRPC server connection configuration
# -----------------------------------------------------------------------------
server:
  # URL of the Radar server's gRPC endpoint (required)
  grpc_url: "http://localhost:50051"

  # API key for authenticating with the Radar server (required)
  # Recommended: Use environment variable for security
  api_key: "${RADAR_API_KEY}"

  # Timeout for server requests with time unit (s, m, h)
  # Default: 30s
  timeout: "30s"

# -----------------------------------------------------------------------------
# Deployments Section - Redis instances to monitor
# -----------------------------------------------------------------------------
deployments:
  # Example 1: Standalone Redis Instance
  - id: "redis-standalone"
    name: "Local Redis Server"
    type: "standalone"
    host: "localhost"
    port: 6379
    password: "${REDIS_PASSWORD}"
    tls: false

  # Example 2: Redis Enterprise Cluster
  - id: "redis-enterprise"
    name: "Production Enterprise"
    type: "enterprise"
    credentials:
      rest_api:
        # REST API endpoint (typically port 9443)
        url: "https://enterprise.example.com:9443"

        # Admin username (usually includes @domain)
        username: "admin@redis.local"

        # Admin password
        password: "${ENTERPRISE_PASSWORD}"

        # Set to true to skip certificate verification for self-signed certs
        insecure: false

        # Optional: Enterprise admin UI URL (typically port 8443)
        enterprise_admin_url: "https://enterprise.example.com:8443"

  # Example 3: Redis Cluster (OSS)
  - id: "redis-cluster"
    name: "Main Cluster"
    type: "cluster"

    # Initial seed nodes for cluster discovery
    # The agent will discover all other nodes automatically
    seed_nodes:
      - "cluster1.example.com:7000"
      - "cluster2.example.com:7000"
      - "cluster3.example.com:7000"

    password: "${CLUSTER_PASSWORD}"
    tls: false

  # Example 4: Redis Sentinel (High Availability)
  - id: "redis-sentinel"
    name: "HA Redis"
    type: "sentinel"

    # Name of the monitored master
    master_name: "mymaster"

    # List of Sentinel instances
    sentinels:
      - "sentinel1.example.com:26379"
      - "sentinel2.example.com:26379"
      - "sentinel3.example.com:26379"

    # Redis instance authentication
    password: "${REDIS_PASSWORD}"

    # Sentinel authentication (if different from Redis)
    sentinel_password: "${SENTINEL_PASSWORD}"

    tls: false

# =============================================================================
# Environment Variable Examples
# =============================================================================
# Set these environment variables before running the agent:
#
# export RADAR_API_KEY="your-api-key-here"
# export REDIS_PASSWORD="your-redis-password"
# export ENTERPRISE_PASSWORD="your-enterprise-password"
# export CLUSTER_PASSWORD="your-cluster-password"
# export SENTINEL_PASSWORD="your-sentinel-password"
#
# You can also use default values:
# password: "${REDIS_PASSWORD:-default_password}"
#
# =============================================================================
