# Dockerfile.musl
# -----------------------------------------------------------------------------
# Purpose: Builds the radar-agent binary using the musl libc toolchain to produce
# a fully static binary that runs on older distros like Ubuntu 18.04 or Alpine.
#
# Use this to validate musl-based builds run correctly under emulated or legacy targets.
#
# Usage:
#   docker build -f Dockerfile.musl -t radar-agent-musl .
#   docker run --rm --platform linux/amd64 radar-agent-musl

# -------- Build Stage --------
FROM --platform=linux/amd64 rust:1.88-slim as builder

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    protobuf-compiler \
    pkg-config \
    libssl-dev \
    musl-tools \
    ca-certificates && \
    rustup target add x86_64-unknown-linux-musl && \
    rm -rf /var/lib/apt/lists/*

ENV CARGO_HOME=/cargo
WORKDIR /app

COPY proto ./proto
COPY agent ./agent

WORKDIR /app/agent
RUN cargo build --release --target x86_64-unknown-linux-musl

# -------- Runtime Stage --------
FROM --platform=linux/amd64 alpine:3.20

RUN adduser -D -u 1000 appuser

COPY --from=builder /app/agent/target/x86_64-unknown-linux-musl/release/radar-agent /usr/local/bin/radar-agent

ENV AGENT_TLS_CERT=/certs/server.pem
ENV AGENT_TLS_KEY=/certs/server.key

# Healthcheck for orchestrators
HEALTHCHECK --interval=30s --timeout=5s \
  CMD ["/usr/local/bin/radar-agent", "--health"] || exit 1

USER appuser
ENTRYPOINT ["/usr/local/bin/radar-agent"]
