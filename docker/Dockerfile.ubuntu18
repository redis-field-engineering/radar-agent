# Dockerfile.ubuntu18
# -----------------------------------------------------------------------------
# Purpose: Tests whether the compiled radar-agent binary can run on Ubuntu 18.04.
# This simulates a minimal, older glibc-based Linux runtime environment.
# Build manually using a recent toolchain, then copy the radar-agent binary into this image.
#
# Usage:
#   docker build -f Dockerfile.ubuntu18 -t radar-agent-ubuntu18 .
#   docker run --rm radar-agent-ubuntu18

# ---- Build Stage ----
FROM ubuntu:18.04 AS builder

# Install Rust and dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    curl \
    unzip \
    build-essential \
    pkg-config \
    libssl-dev \
    ca-certificates && \
    curl https://sh.rustup.rs -sSf | bash -s -- -y && \
    rm -rf /var/lib/apt/lists/*

RUN curl -L -o protoc.zip https://github.com/protocolbuffers/protobuf/releases/download/v31.1/protoc-31.1-linux-x86_64.zip && \
    unzip protoc.zip -d /usr/local && \
    rm protoc.zip

ENV PATH="/root/.cargo/bin:${PATH}"
ENV CARGO_HOME=/cargo
WORKDIR /app

COPY proto ./proto
COPY agent ./agent

WORKDIR /app/agent
RUN cargo build --release

# ---- Runtime Stage ----
FROM ubuntu:18.04

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    libssl1.1 \
    ca-certificates \
    curl && \
    rm -rf /var/lib/apt/lists/* && \
    adduser --disabled-password --gecos "" appuser

COPY --from=builder /app/agent/target/release/radar-agent /usr/local/bin/radar-agent

ENV AGENT_TLS_CERT=/certs/server.pem
ENV AGENT_TLS_KEY=/certs/server.key

USER appuser

ENTRYPOINT ["/usr/local/bin/radar-agent"]
